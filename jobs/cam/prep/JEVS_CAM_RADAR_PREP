#!/bin/bash

########################################
# Preliminary data setup step
########################################
set -xa


####################################
# SET SHELL PROCESSING VARIABLES
####################################
export PS4='$SECONDS + '
date


###########################################################
# obtain unique LSF id (jobid) and make temp directories
###########################################################
export pid=$$
if [ $VERIF_CASE = precip ] ; then
   # LD: if statement not needed if DATAROOT is set upstream in ecf script.
   #     DATA and DATA_IN can also be combined as in else command below.

   # in production, the following will be set to DATAROOT
   #export DATA_IN=${DATA_IN:-$DATAROOT}
   export DATA_IN=${DATA_IN:-$DATAROOTtmp}
   export DATA=$DATA_IN/${jobid}
   rm -rf $DATA
else
   export DATA=${DATA:-${DATAROOT:?}/${jobid:?}}
fi
mkdir -p $DATA
cd $DATA


####################################
# Determine Job Output Name on System
####################################
export pgmout="OUTPUT.${pid}"


####################################
# Set EVS directories
####################################
export HOMEevs=${HOMEevs:-${PACKAGEROOT}/evs.${evs_ver}}
export EXECevs=${EXECevs:-$HOMEevs/exec}
export FIXevs=${FIXevs:-$HOMEevs/fix}
export PARMevs=${PARMevs:-$HOMEevs/parm}
export USHevs=${USHevs:-$HOMEevs/ush}

# Really the only if statement for precip that needs to be kept
# Or this could move to the ex-script?
if [ $VERIF_CASE = precip ] ; then
   export MET_PLUS_CONF="${PARMevs}/metplus_config/cam/precip/stats"
fi


####################################
# Run setpdy and initialize PDY variables
####################################
export cycle=${cycle:-t${cyc}z}
setpdy.sh 8
. ./PDY

# Make PDYm8 available for severe verification job
#export PDYm8=`finddate.sh $PDY d-8`

if [ $VERIF_CASE = precip ] ; then
   # LD: can use setpdy.sh instead to match convention of rest of EVS  
   export VDATE=$(date -d "today -1 day" +"%Y%m%d")
elif [ $VERIF_CASE = radar ] ; then
   export VDATE=${VDATE:-$PDYm1}
elif [ $VERIF_CASE = severe ] ; then
   export VDATE=${VDATE:-$PDYm8}
fi


####################################
# Define NET/RUN variables
####################################
export NET=${NET:-evs}
export STEP=${STEP:-prep}
export COMPONENT=${COMPONENT:-cam}
export RUN=${RUN:-atmos}


####################################
# Define COMIN/COMOUT variables
####################################
export COMIN=${COMIN:-$(compath.py $NET/$evs_ver)}
export COMINccpa=${COMINccpa:-$(compath.py prod/ccpa/$ccpa_ver)}
export COMINhiresw=${COMINhiresw:-$(compath.py ${envir}/com/hiresw/${hiresw_ver})}
export COMINhrrr=${COMINhrrr:-$(compath.py ${envir}/com/hrrr/${hrrr_ver})}
export COMINmrms=$DCOMROOT/ldmdata/obs/upperair/mrms
export COMINnam=${COMINnam:-$(compath.py ${envir}/com/nam/${nam_ver})}
export COMINspc=${COMINspc:-$DCOMROOT}



export COMOUT=${COMOUT:-$(compath.py -o $NET/$evs_ver/$STEP/$COMPONENT/$RUN)}
export COMOUTmrms=${COMOUT}/mrms.${VDATE}
export COMOUTspc=${COMOUT}/spc.${VDATE}


####################################
# Execute the script 
####################################
#env
$HOMEevs/scripts/$COMPONENT/$STEP/exevs_${COMPONENT}_${VERIF_CASE}_${STEP}.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
   cat $pgmout
fi

msg="JOB $job HAS COMPLETED NORMALLY."
postmsg "$msg"

if [ "$KEEPDATA" != "YES" ] ; then
   if [ $VERIF_CASE = precip ] ; then
      cd $DATA_IN
   else
      cd $DATAROOT
   fi
   rm -rf $DATA
fi

date
